package main

import (
	"fmt"
	"os"

	"github.com/gotk3/gotk3/gtk"
)

// WindowName is the defined identifier for the main getWindow in the glade template
const WindowName = "MainWindow"

// ListboxName is the defined identifier for the list box in the glade template
const ListboxName = "listbox"

// ButtonName is the defined identifier for the list box in the glade template
const ButtonName = "okayButton"

// UIMain is the path to our glade file
const UIMain = "glade/main.glade"

func main() {

	gtk.Init(&os.Args)

	bldr, err := getBuilder(UIMain)
	if err != nil {
		panic(err)
	}

	window, err := getWindow(bldr)
	if err != nil {
		panic(err)
	}

	window.SetTitle("GoCryptor")
	window.SetDefaultSize(440, 250)

	_, err = window.Connect("destroy", func() {
		gtk.MainQuit()
	})
	if err != nil {
		panic(err)
	}

	window.ShowAll()

	okayButton, err := getButton(bldr, "okayButton")
	if err != nil {
		panic(err)
	}

	cancelButton, err := getButton(bldr, "cancelButton")
	if err != nil {
		panic(err)
	}

	_, err = okayButton.Connect("clicked", func() {
		fmt.Println("Encrypt!")
	})
	if err != nil {
		panic(err)
	}

	_, err = cancelButton.Connect("clicked", func() {
		fmt.Println("Cancel!")
	})
	if err != nil {
		panic(err)
	}

	passwordEntry, err := getEntry(bldr, "password")
	if err != nil {
		panic(err)
	}

	passwordConfirmEntry, err := getEntry(bldr, "passwordConfirm")
	if err != nil {
		panic(err)
	}

	_, err = passwordEntry.Connect("changed", func() {
		fmt.Println("password entry clicked")
		cursorPos, err := passwordEntry.GetProperty("cursor-position")
		if err != nil {
			fmt.Println("Cursor Pos Error!")
		}
		fmt.Println("Cursor at: ", cursorPos)
	})

	_, err = passwordConfirmEntry.Connect("activate", func() {
		fmt.Println("password CONFIRM entry clicked")
	})

	gtk.Main()
}

// getBuilder returns *gtk.getBuilder loaded with glade resource (if resource is given)
func getBuilder(filename string) (*gtk.Builder, error) {

	b, err := gtk.BuilderNew()
	if err != nil {
		return nil, err
	}

	if filename != "" {
		err = b.AddFromFile(filename)
		if err != nil {
			return nil, err
		}
	}

	return b, nil
}

// getWindow returns *gtk.Window object from the glade resource
func getWindow(b *gtk.Builder) (*gtk.Window, error) {

	obj, err := b.GetObject(WindowName)
	if err != nil {
		return nil, err
	}

	window, ok := obj.(*gtk.Window)
	if !ok {
		return nil, err
	}

	return window, nil
}

// getButton returns *gtk.Button object from the glade resource
func getButton(b *gtk.Builder, buttonName string) (*gtk.Button, error) {

	obj, err := b.GetObject(buttonName)
	if err != nil {
		return nil, err
	}

	button, ok := obj.(*gtk.Button)
	if !ok {
		return nil, err
	}

	return button, nil
}

// getEntry returns *gtk.Entry object from the glade resource
func getEntry(e *gtk.Builder, entryName string) (*gtk.Entry, error) {

	obj, err := e.GetObject(entryName)
	if err != nil {
		return nil, err
	}

	entry, ok := obj.(*gtk.Entry)
	if !ok {
		return nil, err
	}

	return entry, nil
}
